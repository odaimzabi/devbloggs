// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Example {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?  @db.Text
  access_token      String?  @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Post{
  id          String @id @default(cuid())
  title       String 
  subtitle    String 
  description String
  github_repo String?
  status      PostStatus @default(Draft)
  image       String?
  video       String?
  author      User @relation(fields:[authorId],references: [id],onDelete:Cascade)
  authorId    String
}

model User {
  id            String    @id @default(cuid())
  name          String? 
  displayName   String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  posts         Post[]
  site          Site?  @relation(fields:[siteId],references: [id])
  siteId        String? @unique
}

model Site{
  id   String    @id @default(cuid())
  user User? 
  price String   @default("10")
  domain String  @unique 
  linkedin String?
  facebook String?
  description String?
}

enum PostStatus{
  Draft
  Published
}



model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}


